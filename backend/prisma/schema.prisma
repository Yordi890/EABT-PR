// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int    @id @default(autoincrement())
  identityCard String @unique
  firstName    String
  lastName     String
  userName     String @unique
  password     String
}

model ProductionUnit {
  id        Int        @id @default(autoincrement())
  name      String
  address   String
  producers Producer[]
}

model Producer {
  id               Int            @id @default(autoincrement())
  dni              String         @unique
  code             String         @unique
  firstName        String
  lastName1        String
  lastName2        String
  phone            String
  productionUnitId Int
  productionUnit   ProductionUnit @relation(fields: [productionUnitId], references: [id])
  cupCard          Float
  mlcCard          Float
  landFiles        LandFile[]
  Contract         Contract[]
}

model LandFile {
  id             Int      @id @default(autoincrement())
  producerId     Int
  fileNumber     String
  area           Float
  propertyType   String
  issueDate      DateTime
  expirationDate DateTime
  producer       Producer @relation(fields: [producerId], references: [id])
}

model Supply {
  id             Int              @id @default(autoincrement())
  name           String
  quantity       Float
  unit           String
  price          Float
  SupplyContract SupplyContract[]
}

model Contract {
  id               Int              @id @default(autoincrement())
  number           String           @unique
  creationDate     DateTime         @default(now())
  producerId       Int
  plantingArea     Float
  seedlingQuantity Float
  plantingType     String
  tobaccoType      String
  producer         Producer         @relation(fields: [producerId], references: [id])
  supplies         SupplyContract[]
}

model SupplyContract {
  id         Int      @id @default(autoincrement())
  contractId Int
  supplyId   Int
  quantity   Float
  contract   Contract @relation(fields: [contractId], references: [id])
  supply     Supply   @relation(fields: [supplyId], references: [id])
}
